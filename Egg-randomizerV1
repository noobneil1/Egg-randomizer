--// Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

--// UI Setup
local playerGui = LocalPlayer:WaitForChild("PlayerGui")
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "GrowAGardenLoading"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

--// Main Container
local container = Instance.new("Frame")
container.Size = UDim2.new(0.6, 0, 0.6, 0)
container.Position = UDim2.new(0.5, 0, 0.5, 0)
container.AnchorPoint = Vector2.new(0.5, 0.5)
container.BackgroundColor3 = Color3.fromRGB(100, 175, 60)
container.BorderSizePixel = 0
container.Parent = screenGui
Instance.new("UICorner", container).CornerRadius = UDim.new(0.05, 0)

--// Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 60)
title.Position = UDim2.new(0, 0, 0.05, 0)
title.BackgroundTransparency = 1
title.Text = "Grow A Garden"
title.Font = Enum.Font.GothamBold
title.TextSize = 40
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Parent = container

--// Progress Bar
local barBg = Instance.new("Frame")
barBg.Size = UDim2.new(0.8, 0, 0, 30)
barBg.Position = UDim2.new(0.5, 0, 0.4, 0)
barBg.AnchorPoint = Vector2.new(0.5, 0.5)
barBg.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
barBg.BorderSizePixel = 0
barBg.Parent = container
Instance.new("UICorner", barBg).CornerRadius = UDim.new(1, 0)

local barFill = Instance.new("Frame")
barFill.Size = UDim2.new(0, 0, 1, 0)
barFill.BackgroundColor3 = Color3.fromRGB(30, 120, 40)
barFill.BorderSizePixel = 0
barFill.Parent = barBg
Instance.new("UICorner", barFill).CornerRadius = UDim.new(1, 0)

local loadingText = Instance.new("TextLabel")
loadingText.Size = UDim2.new(1, 0, 0, 40)
loadingText.Position = UDim2.new(0.5, 0, 0.52, 0)
loadingText.AnchorPoint = Vector2.new(0.5, 0)
loadingText.BackgroundTransparency = 1
loadingText.Text = "Loading: 0%"
loadingText.Font = Enum.Font.GothamBold
loadingText.TextSize = 22
loadingText.TextColor3 = Color3.fromRGB(255, 255, 255)
loadingText.Parent = container

local funFact = Instance.new("TextLabel")
funFact.Size = UDim2.new(0.9, 0, 0, 40)
funFact.Position = UDim2.new(0.5, 0, 0.7, 0)
funFact.AnchorPoint = Vector2.new(0.5, 0)
funFact.BackgroundTransparency = 1
funFact.Text = "üåª Fun Fact: Sunflowers can absorb toxins from soil!"
funFact.Font = Enum.Font.Gotham
funFact.TextSize = 18
funFact.TextColor3 = Color3.fromRGB(245, 245, 245)
funFact.TextWrapped = true
funFact.Parent = container

local creator = Instance.new("TextLabel")
creator.Size = UDim2.new(1, -20, 0, 25)
creator.Position = UDim2.new(1, -10, 1, -10)
creator.AnchorPoint = Vector2.new(1, 1)
creator.BackgroundTransparency = 1
creator.Text = "by: The_Woozoo"
creator.Font = Enum.Font.Gotham
creator.TextSize = 16
creator.TextColor3 = Color3.fromRGB(255, 255, 255)
creator.TextXAlignment = Enum.TextXAlignment.Right
creator.Parent = container

--// Animate Loading
local duration, steps = 20, 100
for i = 0, steps do
	local progress = i / steps
	barFill.Size = UDim2.new(progress, 0, 1, 0)
	loadingText.Text = "Loading: " .. i .. "%"
	wait(duration / steps)
end

screenGui:Destroy()

--------------------------------------------------------------------------------
-- Egg Script
--------------------------------------------------------------------------------

local EggData = {
	["Bug Egg"] = {"Caterpillar", "Giant Ant", "Praying Mantis"},
	["Night Egg"] = {"Night Owl", "Echo Frog", "Frog", "Mole", "Hedgehog"},
	["Mythical Egg"] = {"Red Giant Ant", "Squirrel", "Brown Mouse", "Grey Mouse"},
	["Dinosaur Egg"] = {"Brontosaurus", "Pterodactyl", "Stegosaurus", "Triceratops", "Raptor"},
	["Primal Egg"] = {"Ankylosaurus", "Dilophosaurus", "Pachycephalosaurus", "Iguanodon", "Parasaurolophus"},
	["Paradise Egg"] = {"Scarlet Macaw", "Capybara", "Peacock", "Ostrich"},
	["Anti Egg"] = {"Bee Moth", "Tarantula Hawk", "Wasp"},
}

local PetColors = {
	["Wasp"] = Color3.fromRGB(255, 0, 0),
	["Tarantula Hawk"] = Color3.fromRGB(255, 69, 0),
	["Bee Moth"] = Color3.fromRGB(255, 215, 0),
	["Peacock"] = Color3.fromRGB(0, 153, 255),
	["Scarlet Macaw"] = Color3.fromRGB(255, 36, 0),
	["Capybara"] = Color3.fromRGB(160, 82, 45),
	["Ostrich"] = Color3.fromRGB(240, 240, 240),
}

local eggESP, eggLabels = {}, {}
local visible, cooldown = true, false

local function clearAll()
	for _, esp in ipairs(eggESP) do if esp and esp.Parent then esp:Destroy() end end
	for _, label in ipairs(eggLabels) do if label and label.Parent then label:Destroy() end end
	eggESP, eggLabels = {}, {}
end

local function createESP(egg, color)
	local highlight = Instance.new("Highlight")
	highlight.Adornee = egg
	highlight.FillColor = color
	highlight.FillTransparency = 0.6
	highlight.OutlineColor = color
	highlight.OutlineTransparency = 0
	highlight.Parent = egg
	table.insert(eggESP, highlight)
end

local function createLabel(egg, petName)
	local billboard = Instance.new("BillboardGui")
	billboard.Name = "PetDetectorBillboard"
	billboard.Size = UDim2.new(0, 220, 0, 40)
	billboard.Adornee = egg.PrimaryPart or egg:FindFirstChildWhichIsA("BasePart")
	billboard.AlwaysOnTop = true
	billboard.StudsOffset = Vector3.new(0, 3.5, 0)
	billboard.Parent = egg

	local label = Instance.new("TextLabel")
	label.BackgroundTransparency = 1
	label.Size = UDim2.new(1, 0, 1, 0)
	label.Text = "Inside: " .. petName
	label.TextColor3 = Color3.fromRGB(255, 255, 0)
	label.Font = Enum.Font.GothamBold
	label.TextSize = 20
	label.Parent = billboard

	table.insert(eggLabels, billboard)
end

local function getRandomPet(eggName)
	local pets = EggData[eggName]
	return pets and pets[math.random(1, #pets)] or nil
end

local function assignRandomPet(egg)
	local pet = getRandomPet(egg.Name)
	if pet then
		egg:SetAttribute("RerolledPet", pet)
	end
end

local function createESPAndLabel(egg)
	local pet = egg:GetAttribute("RerolledPet")
	if not pet then return end
	local color = PetColors[pet] or Color3.fromRGB(255, 255, 0)
	createESP(egg, color)
	createLabel(egg, pet)
end

function update()
	clearAll()
	for _, obj in ipairs(Workspace:GetDescendants()) do
		if obj:IsA("Model") and EggData[obj.Name] then
			if not obj:GetAttribute("RerolledPet") then
				assignRandomPet(obj)
			end
			if visible then
				createESPAndLabel(obj)
			end
		end
	end
end

function rerollPets()
	clearAll()
	for _, obj in ipairs(Workspace:GetDescendants()) do
		if obj:IsA("Model") and EggData[obj.Name] then
			assignRandomPet(obj)
			if visible then
				createESPAndLabel(obj)
			end
		end
	end
end

--// UI Buttons
local rerollGui = Instance.new("ScreenGui")
rerollGui.Name = "RerollUI"
rerollGui.ResetOnSpawn = false
rerollGui.Parent = playerGui

local rerollBtn = Instance.new("TextButton")
rerollBtn.Size = UDim2.new(0, 140, 0, 40)
rerollBtn.Position = UDim2.new(0, 20, 1, -60)
rerollBtn.AnchorPoint = Vector2.new(0, 1)
rerollBtn.BackgroundColor3 = Color3.fromRGB(30, 120, 40)
rerollBtn.Text = "üîÑ Reroll"
rerollBtn.Font = Enum.Font.GothamBold
rerollBtn.TextSize = 20
rerollBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
rerollBtn.Parent = rerollGui
Instance.new("UICorner", rerollBtn).CornerRadius = UDim.new(0.2, 0)

local autoToggle = Instance.new("TextButton")
autoToggle.Size = UDim2.new(0, 160, 0, 40)
autoToggle.Position = UDim2.new(0, 180, 1, -60)
autoToggle.AnchorPoint = Vector2.new(0, 1)
autoToggle.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
autoToggle.Text = "‚è±Ô∏è Auto Reroll: OFF"
autoToggle.Font = Enum.Font.Gotham
autoToggle.TextSize = 18
autoToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
autoToggle.Parent = rerollGui
Instance.new("UICorner", autoToggle).CornerRadius = UDim.new(0.2, 0)

-- Manual Reroll
rerollBtn.MouseButton1Click:Connect(function()
	rerollPets()
end)

-- Auto Reroll Loop
local autoReroll = false
autoToggle.MouseButton1Click:Connect(function()
	autoReroll = not autoReroll
	autoToggle.Text = autoReroll and "‚è±Ô∏è Auto Reroll: ON" or "‚è±Ô∏è Auto Reroll: OFF"
	autoToggle.BackgroundColor3 = autoReroll and Color3.fromRGB(30, 120, 40) or Color3.fromRGB(100, 100, 100)
end)

task.spawn(function()
	while true do
		if autoReroll then
			rerollPets()
		end
		wait(5)
	end
end)

-- H Key to toggle ESP
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == Enum.KeyCode.H then
		if cooldown then return end
		cooldown = true
		visible = not visible
		if visible then
			update()
		else
			clearAll()
		end
		task.delay(0.3, function() cooldown = false end)
	end
end)

-- Initial Run
update()
